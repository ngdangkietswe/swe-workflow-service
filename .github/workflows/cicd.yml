name: Java CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - '**/*.md'

env:
  IMAGE_NAME: 01092002/swe-workflow-service

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    outputs:
      START_TIME: ${{ steps.build_start_time.outputs.start_time }}
      IMAGE_TAG: ${{ steps.build_image.outputs.image_tag }}
      COMMIT_SHA: ${{ steps.build_image.outputs.commit_sha }}

    steps:
      - name: Calculate build start time
        id: build_start_time
        run: echo "start_time=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up cache for Maven
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      - name: Configure Maven for GitHub Packages
        run: |
          mkdir -p ~/.m2
          echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0" 
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
          xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 
          https://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>github-protobuf-shared</id>
                <username>ngdangkietswe</username>
                <password>${{ secrets.GITHUB_TOKEN }}</password>
              </server>
              <server>
                <id>github-java-common-shared</id>
                <username>ngdangkietswe</username>
                <password>${{ secrets.GITHUB_TOKEN }}</password>
              </server>
            </servers>
          </settings>' > ~/.m2/settings.xml

      - name: Generate Java Code
        run: mvn -T 1C clean install -Dmaven.test.skip -DskipTests

      - name: Extract Branch Name
        id: extract_branch
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Confirm Docker Login
        run: echo "âœ… Successfully logged in to Docker Hub."

      - name: Build Docker Image
        id: build_image
        run: |
          set -e  # Exit on any error
          echo "ðŸš€ Starting Docker image build..."

          # Extract details for tagging
          TIMESTAMP=$(TZ=Asia/Ho_Chi_Minh date +"%Y%m%d%H%M%S")
          BRANCH_NAME=${{ steps.extract_branch.outputs.branch }}
          COMMIT_SHA=$(git rev-parse --short HEAD)
          IMAGE_TAG="$BRANCH_NAME-$COMMIT_SHA-$TIMESTAMP"

          echo "ðŸ”– Tagging Docker image as $IMAGE_TAG..."
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "commit_sha=$COMMIT_SHA" >> $GITHUB_OUTPUT

          # Build the Docker image
          docker build -t $IMAGE_NAME:$IMAGE_TAG .

      - name: Confirm Docker Build
        run: |
          echo "âœ… Docker image built successfully with tag: ${{ env.IMAGE_TAG }}."

      - name: Push Docker Image
        run: |
          set -e  # Exit on any error
          echo "ðŸ“¤ Pushing Docker images to Docker Hub..."

          # Push both tags
          docker push $IMAGE_NAME:${{ env.IMAGE_TAG }}

          echo "âœ… Docker image pushed successfully: $IMAGE_NAME:${{ env.IMAGE_TAG }}."

  modify-k8s:
    name: Modify Kubernetes Deployment
    needs: build-and-push
    runs-on: ubuntu-latest

    outputs:
      DURATION: ${{ steps.build_duration.outputs.duration }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          repository: 'ngdangkietswe/swe-infrastructure'
          token: ${{ secrets.PAT }}

      - name: Modify Image Tag
        id: modify_image_tag
        run: |
          set -e  # Exit on any error
          echo "ðŸ”§ Modifying Kubernetes deployment files..."

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"         

          # Extract the image tag
          IMAGE_TAG=${{ needs.build-and-push.outputs.IMAGE_TAG }}

          # Modify the deployment files
          sed -i "s|image: $IMAGE_NAME:.*|image: $IMAGE_NAME:$IMAGE_TAG|" k8s/swe-workflow-service/deployment.yml

          git add .
          git commit -m "chore(swe-workflow-service): update image tag to $IMAGE_TAG"
          git push origin main

          echo "âœ… Kubernetes deployment files updated successfully."

      - name: Calculate build duration
        id: build_duration
        run: |
          START_TIME=${{ needs.build-and-push.outputs.START_TIME }}
          END_TIME=$(date +%s)
          DURATION=$((END_TIME - START_TIME))
          echo "duration=$DURATION" >> $GITHUB_OUTPUT
          echo "âœ… Build took $DURATION seconds."

  push-notification-to-slack:
    name: Slack Notification
    needs: [build-and-push, modify-k8s]
    runs-on: ubuntu-latest

    env:
      SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - name: Push Notification to Slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*:white_check_mark: Succeeded GitHub Actions*"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Repo*\n<https://github.com/${{ github.repository }}|${{ github.repository }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit*\n<${{ github.event.head_commit.url }}|${{ needs.build-and-push.outputs.COMMIT_SHA }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Author*\n${{ github.event.head_commit.author.name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Job*\n`${{ github.job }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Event Name*\n`${{ github.event_name }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Workflow*\n`${{ github.workflow }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Build Logs*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Logs>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Took*\n`${{ needs.modify-k8s.outputs.DURATION }} sec`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Message*\n${{ github.event.head_commit.message }}"
                    }
                  ]
                }
              ]
            }